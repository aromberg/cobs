name: Python

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]

    steps:
      - name: Check out code for the build
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python for cibuildwheel
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: auto64
          CIBW_SKIP: "*-musllinux_x86_64"
          CIBW_BEFORE_BUILD_MACOS: brew install libomp
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.15 OpenMP_ROOT=$(brew --prefix libomp)
          CIBW_TEST_COMMAND: "python -m unittest discover {project}/python/tests"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
      name: SDist
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_testpypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published' && !github.event.release.prerelease
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1